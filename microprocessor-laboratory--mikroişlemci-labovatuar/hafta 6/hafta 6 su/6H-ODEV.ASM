
; PICBASIC PRO(TM) Compiler 2.60, (c) 1998, 2009 microEngineering Labs, Inc. All Rights Reserved. 
_USED			EQU	1

	INCLUDE	"C:\PBP\16F877.INC"


; Define statements.
; C:\PBP\16F877.BAS        	00018	DEFINE  CODE_SIZE 8
#define		CODE_SIZE		 8
; C:\TEST\6H-ODEV.PBP      	00006	DEFINE LCD_DREG PORTB  
#define		LCD_DREG		 PORTB  
; C:\TEST\6H-ODEV.PBP      	00007	DEFINE LCD_DBIT 4 
#define		LCD_DBIT		 4 
; C:\TEST\6H-ODEV.PBP      	00008	DEFINE LCD_EREG PORTB  
#define		LCD_EREG		 PORTB  
; C:\TEST\6H-ODEV.PBP      	00009	DEFINE LCD_EBIT 3  
#define		LCD_EBIT		 3  
; C:\TEST\6H-ODEV.PBP      	00010	DEFINE LCD RWREG PORTB 
#define		LCD		 RWREG PORTB 
; C:\TEST\6H-ODEV.PBP      	00011	DEFINE LCD_RWBIT 2 
#define		LCD_RWBIT		 2 
; C:\TEST\6H-ODEV.PBP      	00012	DEFINE LCD_RSREG PORTB 
#define		LCD_RSREG		 PORTB 
; C:\TEST\6H-ODEV.PBP      	00013	DEFINE LCD_RSBIT 1 
#define		LCD_RSBIT		 1 
; C:\TEST\6H-ODEV.PBP      	00014	DEFINE LCD_BITS 4 
#define		LCD_BITS		 4 
; C:\TEST\6H-ODEV.PBP      	00015	DEFINE LCD_LINES 2
#define		LCD_LINES		 2
; C:\TEST\6H-ODEV.PBP      	00017	DEFINE ADC_BITS 10 
#define		ADC_BITS		 10 
; C:\TEST\6H-ODEV.PBP      	00018	DEFINE ADC_CLOCK 3 
#define		ADC_CLOCK		 3 
; C:\TEST\6H-ODEV.PBP      	00019	DEFINE ADC_SAMPLEUS 100 
#define		ADC_SAMPLEUS		 100 

RAM_START       		EQU	00020h
RAM_END         		EQU	001EFh
RAM_BANKS       		EQU	00004h
BANK0_START     		EQU	00020h
BANK0_END       		EQU	0007Fh
BANK1_START     		EQU	000A0h
BANK1_END       		EQU	000EFh
BANK2_START     		EQU	00110h
BANK2_END       		EQU	0016Fh
BANK3_START     		EQU	00190h
BANK3_END       		EQU	001EFh
EEPROM_START    		EQU	02100h
EEPROM_END      		EQU	021FFh

; C:\PBP\PBPPIC14.RAM      	00012	A00020	R0      VAR     WORD BANK0 SYSTEM       ' System Register
R0              		EQU	RAM_START + 000h
; C:\PBP\PBPPIC14.RAM      	00013	A00022	R1      VAR     WORD BANK0 SYSTEM       ' System Register
R1              		EQU	RAM_START + 002h
; C:\PBP\PBPPIC14.RAM      	00014	A00024	R2      VAR     WORD BANK0 SYSTEM       ' System Register
R2              		EQU	RAM_START + 004h
; C:\PBP\PBPPIC14.RAM      	00015	A00026	R3      VAR     WORD BANK0 SYSTEM       ' System Register
R3              		EQU	RAM_START + 006h
; C:\PBP\PBPPIC14.RAM      	00016	A00028	R4      VAR     WORD BANK0 SYSTEM       ' System Register
R4              		EQU	RAM_START + 008h
; C:\PBP\PBPPIC14.RAM      	00017	A0002A	R5      VAR     WORD BANK0 SYSTEM       ' System Register
R5              		EQU	RAM_START + 00Ah
; C:\PBP\PBPPIC14.RAM      	00018	A0002C	R6      VAR     WORD BANK0 SYSTEM       ' System Register
R6              		EQU	RAM_START + 00Ch
; C:\PBP\PBPPIC14.RAM      	00019	A0002E	R7      VAR     WORD BANK0 SYSTEM       ' System Register
R7              		EQU	RAM_START + 00Eh
; C:\PBP\PBPPIC14.RAM      	00020	A00030	R8      VAR     WORD BANK0 SYSTEM       ' System Register
R8              		EQU	RAM_START + 010h
; C:\PBP\PBPPIC14.RAM      	00026	A00032	FLAGS   VAR     BYTE BANK0 SYSTEM       ' Static flags
FLAGS           		EQU	RAM_START + 012h
; C:\PBP\PBPPIC14.RAM      	00025	A00033	GOP     VAR     BYTE BANK0 SYSTEM       ' Gen Op Parameter
GOP             		EQU	RAM_START + 013h
; C:\PBP\PBPPIC14.RAM      	00022	A00034	RM1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Mask
RM1             		EQU	RAM_START + 014h
; C:\PBP\PBPPIC14.RAM      	00024	A00035	RM2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Mask
RM2             		EQU	RAM_START + 015h
; C:\PBP\PBPPIC14.RAM      	00021	A00036	RR1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Register
RR1             		EQU	RAM_START + 016h
; C:\PBP\PBPPIC14.RAM      	00023	A00037	RR2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Register
RR2             		EQU	RAM_START + 017h
; C:\TEST\6H-ODEV.PBP      	00025	A00038	HAM var word  
_HAM             		EQU	RAM_START + 018h
; C:\TEST\6H-ODEV.PBP      	00024	A0003A	ISI VAR WORD
_ISI             		EQU	RAM_START + 01Ah
; C:\TEST\6H-ODEV.PBP      	00001	A0003C	TRISA=%00000001
T1              		EQU	RAM_START + 01Ch
; C:\TEST\6H-ODEV.PBP      	00026	A0003E	ONDA VAR BYTE
_ONDA            		EQU	RAM_START + 01Eh
; C:\PBP\16F877.BAS        	00022	PORTL   VAR     PORTB
_PORTL           		EQU	 PORTB
; C:\PBP\16F877.BAS        	00023	PORTH   VAR     PORTC
_PORTH           		EQU	 PORTC
; C:\PBP\16F877.BAS        	00024	TRISL   VAR     TRISB
_TRISL           		EQU	 TRISB
; C:\PBP\16F877.BAS        	00025	TRISH   VAR     TRISC
_TRISH           		EQU	 TRISC
#define _PORTB??2        	 PORTB, 002h
#define _ADCON0??2       	 ADCON0, 002h
#define _PORTC??0        	 PORTC, 000h
#define _PORTC??1        	 PORTC, 001h
	INCLUDE	"6H-ODEV.MAC"
	INCLUDE	"C:\PBP\PBPPIC14.LIB"


; C:\PBP\16F877.BAS        	00012	BANK0   $0020, $007F
; C:\PBP\16F877.BAS        	00013	BANK1   $00A0, $00EF
; C:\PBP\16F877.BAS        	00014	BANK2   $0110, $016F
; C:\PBP\16F877.BAS        	00015	BANK3   $0190, $01EF
; C:\PBP\16F877.BAS        	00016	EEPROM  $2100, $21FF
; C:\PBP\16F877.BAS        	00017	LIBRARY "PBPPIC14"
; C:\PBP\16F877.BAS        	00018	DEFINE  CODE_SIZE 8

; C:\PBP\16F877.BAS        	00020	        include "PIC14EXT.BAS"

; C:\PBP\16F877.BAS        	00027	        include "PBPPIC14.RAM"

; C:\TEST\6H-ODEV.PBP      	00001	TRISA=%00000001
	MOVE?CB	001h, TRISA

; C:\TEST\6H-ODEV.PBP      	00002	TRISB=0
	MOVE?CB	000h, TRISB

; C:\TEST\6H-ODEV.PBP      	00003	TRISC=0
	MOVE?CB	000h, TRISC

; C:\TEST\6H-ODEV.PBP      	00004	TRISD=0
	MOVE?CB	000h, TRISD
; C:\TEST\6H-ODEV.PBP      	00006	DEFINE LCD_DREG PORTB  
; C:\TEST\6H-ODEV.PBP      	00007	DEFINE LCD_DBIT 4 
; C:\TEST\6H-ODEV.PBP      	00008	DEFINE LCD_EREG PORTB  
; C:\TEST\6H-ODEV.PBP      	00009	DEFINE LCD_EBIT 3  
; C:\TEST\6H-ODEV.PBP      	00010	DEFINE LCD RWREG PORTB 
; C:\TEST\6H-ODEV.PBP      	00011	DEFINE LCD_RWBIT 2 
; C:\TEST\6H-ODEV.PBP      	00012	DEFINE LCD_RSREG PORTB 
; C:\TEST\6H-ODEV.PBP      	00013	DEFINE LCD_RSBIT 1 
; C:\TEST\6H-ODEV.PBP      	00014	DEFINE LCD_BITS 4 
; C:\TEST\6H-ODEV.PBP      	00015	DEFINE LCD_LINES 2
; C:\TEST\6H-ODEV.PBP      	00017	DEFINE ADC_BITS 10 
; C:\TEST\6H-ODEV.PBP      	00018	DEFINE ADC_CLOCK 3 
; C:\TEST\6H-ODEV.PBP      	00019	DEFINE ADC_SAMPLEUS 100 

; C:\TEST\6H-ODEV.PBP      	00022	ADCON1=%10001110 
	MOVE?CB	08Eh, ADCON1

; C:\TEST\6H-ODEV.PBP      	00028	LOW PORTB.2  
	LOW?T	_PORTB??2

; C:\TEST\6H-ODEV.PBP      	00029	LCDOUT $FE,1  
	LCDOUT?C	0FEh
	LCDOUT?C	001h

; C:\TEST\6H-ODEV.PBP      	00030	pause 200  
	PAUSE?C	0C8h

; C:\TEST\6H-ODEV.PBP      	00032	BASLA: 

	LABEL?L	_BASLA	

; C:\TEST\6H-ODEV.PBP      	00033	        ADCIN 0,HAM   
	ADCIN?CW	000h, _HAM

; C:\TEST\6H-ODEV.PBP      	00034	BAK: IF ADCON0.2=1 THEN BAK

	LABEL?L	_BAK	

; C:\TEST\6H-ODEV.PBP      	00034	BAK: IF ADCON0.2=1 THEN BAK
	CMPEQ?TCL	_ADCON0??2, 001h, _BAK

; C:\TEST\6H-ODEV.PBP      	00036	    ISI = ((HAM-146)*100)/22
	SUB?WCW	_HAM, 092h, T1
	MUL?WCW	T1, 064h, T1
	DIV?WCW	T1, 016h, _ISI

; C:\TEST\6H-ODEV.PBP      	00037	    ONDA=ISI//10
	MOD?WCB	_ISI, 00Ah, _ONDA

; C:\TEST\6H-ODEV.PBP      	00038	    ISI = ISI/10 
	DIV?WCW	_ISI, 00Ah, _ISI

; C:\TEST\6H-ODEV.PBP      	00039	    lcdout $FE, 1, " HAM =",#HAM
	LCDOUT?C	0FEh
	LCDOUT?C	001h
	LCDOUT?C	020h
	LCDOUT?C	048h
	LCDOUT?C	041h
	LCDOUT?C	04Dh
	LCDOUT?C	020h
	LCDOUT?C	03Dh
	LCDOUTD?W	_HAM

; C:\TEST\6H-ODEV.PBP      	00041	    LCDOUT $FE,$C0," ISI=",#ISI,",",#ONDA," C"
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUT?C	020h
	LCDOUT?C	049h
	LCDOUT?C	053h
	LCDOUT?C	049h
	LCDOUT?C	03Dh
	LCDOUTD?W	_ISI
	LCDOUT?C	02Ch
	LCDOUTD?B	_ONDA
	LCDOUT?C	020h
	LCDOUT?C	043h

; C:\TEST\6H-ODEV.PBP      	00042	    PAUSE 500
	PAUSE?C	001F4h

; C:\TEST\6H-ODEV.PBP      	00044	    IF ISI >= 25 THEN 
	CMPLT?WCL	_ISI, 019h, L00001

; C:\TEST\6H-ODEV.PBP      	00045	    PORTC.0 = 1
	MOVE?CT	001h, _PORTC??0

; C:\TEST\6H-ODEV.PBP      	00046	    PORTC.1 = 0
	MOVE?CT	000h, _PORTC??1

; C:\TEST\6H-ODEV.PBP      	00047	    ELSE 
	GOTO?L	L00002
	LABEL?L	L00001	

; C:\TEST\6H-ODEV.PBP      	00048	    PORTC.0 = 0
	MOVE?CT	000h, _PORTC??0

; C:\TEST\6H-ODEV.PBP      	00049	    PORTC.1 = 1
	MOVE?CT	001h, _PORTC??1

; C:\TEST\6H-ODEV.PBP      	00050	    ENDIF
	LABEL?L	L00002	

; C:\TEST\6H-ODEV.PBP      	00052	GOTO BASLA
	GOTO?L	_BASLA

	END
